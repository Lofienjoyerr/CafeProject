openapi: 3.0.3
info:
  title: CafeProject API
  version: 1.0.0
  description: Backend for cafe order management
paths:
  /api/v1/email/change/:
    post:
      operationId: api_v1_email_change_create
      description: Endpoint to change user email
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailChange'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/email/resend-verify/:
    post:
      operationId: api_v1_email_resend_verify_create
      description: Endpoint to resend email verification
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailResend'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailResend'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailResend'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/email/verify/{token}/:
    get:
      operationId: api_v1_email_verify_retrieve
      description: Endpoint to verify user email
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/items/:
    get:
      operationId: api_v1_items_list
      description: Endpoint to get list of all items
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemList'
          description: ''
    post:
      operationId: api_v1_items_create
      description: Endpoint to create item
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/v1/items/{id}/:
    get:
      operationId: api_v1_items_retrieve
      description: Endpoint to get info about some item
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: api_v1_items_update
      description: Endpoint to full change some item info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: api_v1_items_partial_update
      description: Endpoint to partial change some item info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: api_v1_items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/orders/:
    get:
      operationId: api_v1_orders_list
      description: Endpoint to get list of all orders
      parameters:
      - in: query
        name: date
        schema:
          type: string
          format: date
        description: A date for filtering
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
        description: A list of statuses for filtering
        explode: true
      - in: query
        name: table_number
        schema:
          type: integer
        description: A list of table_numbers for filtering
        explode: true
      - in: query
        name: today
        schema: {}
        description: If today in query, returns list of today orders
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_v1_orders_create
      description: Endpoint to create order
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/orders/{id}/:
    get:
      operationId: api_v1_orders_retrieve
      description: Endpoint to get info about some order
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_orders_update
      description: Endpoint to full change some order info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_v1_orders_partial_update
      description: Endpoint to partial change some order info
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_v1_orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/password/change/:
    post:
      operationId: api_v1_password_change_create
      description: Endpoint to change user password
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/password/resend-verify/:
    post:
      operationId: api_v1_password_resend_verify_create
      description: Endpoint to resend password reset email
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResend'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResend'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResend'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/password/reset/:
    post:
      operationId: api_v1_password_reset_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
  /api/v1/password/reset/verify/{token}/:
    post:
      operationId: api_v1_password_reset_verify_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetVerify'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetVerify'
          description: ''
  /api/v1/register/:
    post:
      operationId: api_v1_register_create
      description: Endpoint to register user and send email
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/revenue/:
    post:
      operationId: api_v1_revenue_create
      description: 'Endpoint to calc revenue for some date'
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalcRevenue'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalcRevenue'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalcRevenue'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  revenue:
                    type: integer
                    description: "The calculated revenue for some date"
  /api/v1/token/:
    post:
      operationId: api_v1_token_create
      description: Endpoint to get JWT for user login
      tags:
      - api
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /api/v1/token/blacklist/:
    post:
      operationId: api_v1_token_blacklist_create
      description: |-
        Takes a token and blacklists it. Must be used with the
        `rest_framework_simplejwt.token_blacklist` app installed.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBlacklist'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBlacklist'
          description: ''
  /api/v1/token/refresh/:
    post:
      operationId: api_v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/token/verify/:
    post:
      operationId: api_v1_token_verify_create
      description: Endpoint to verify user JWT and get user info
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserDetail'
          description: ''
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUsersListList'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: api_v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    put:
      operationId: api_v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
    patch:
      operationId: api_v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetail'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetail'
          description: ''
components:
  schemas:
    AdminUserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        phone:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 254
        avatar:
          type: string
          format: uri
        password:
          type: string
          title: Пароль
          readOnly: true
        is_active:
          type: boolean
        is_superuser:
          type: boolean
        is_staff:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Последний вход
          readOnly: true
      required:
      - date_joined
      - email
      - id
      - last_login
      - password
    CalcRevenue:
      type: object
      properties:
        date:
          type: string
          format: date
      required:
      - date
    EmailChange:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 128
        password:
          type: string
          maxLength: 128
        new_email:
          type: string
          format: email
          maxLength: 128
      required:
      - email
      - new_email
      - password
    EmailResend:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 128
      required:
      - email
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Название блюда
          maxLength: 128
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Цена
      required:
      - id
      - name
      - price
      - url
    MyTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Order:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        table_number:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Номер стола
        items:
          type: array
          items:
            type: integer
        total_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Итоговая цена
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - items
      - table_number
      - total_price
      - url
    PaginatedItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedUsersListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UsersList'
    PasswordChange:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 128
        old_password:
          type: string
          maxLength: 128
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - email
      - new_password1
      - new_password2
      - old_password
    PasswordResend:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 128
      required:
      - email
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 128
      required:
      - email
    PasswordResetVerify:
      type: object
      properties:
        password1:
          type: string
          maxLength: 128
        password2:
          type: string
          maxLength: 128
      required:
      - password1
      - password2
    PatchedItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          title: Название блюда
          maxLength: 128
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Цена
    PatchedOrder:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        table_number:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Номер стола
        items:
          type: array
          items:
            type: integer
        total_price:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Итоговая цена
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedUserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        phone:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 254
        avatar:
          type: string
          format: uri
        password:
          type: string
          title: Пароль
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Последний вход
          readOnly: true
    Register:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 128
        password1:
          type: string
          maxLength: 128
        password2:
          type: string
          maxLength: 128
      required:
      - email
      - password1
      - password2
    StatusEnum:
      enum:
      - WAIT
      - READY
      - PAID
      type: string
      description: |-
        * `WAIT` - В ожидании
        * `READY` - Готово
        * `PAID` - Оплачено
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        phone:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 254
        avatar:
          type: string
          format: uri
        password:
          type: string
          title: Пароль
          readOnly: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Последний вход
          readOnly: true
      required:
      - date_joined
      - email
      - id
      - last_login
      - password
    UsersList:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 128
        phone:
          type: string
          nullable: true
        name:
          type: string
          maxLength: 254
        avatar:
          type: string
          format: uri
        date_joined:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
          title: Последний вход
      required:
      - date_joined
      - email
      - id
      - url
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
